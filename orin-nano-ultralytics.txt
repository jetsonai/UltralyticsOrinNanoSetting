http://jetson.webredirect.org/jp5/cu114

# 이 사이트에서 아래의 4개 파일 링크를 클릭하여 다운로드 받아주세요.

opencv_contrib_python-4.10.0+6a181ce-cp38-cp38-linux_aarch64.whl
opencv_python-4.10.0-py3-none-any.whl
torch-2.2.0-cp38-cp38-linux_aarch64.whl
torchvision-0.17.2+c1d70fe-cp38-cp38-linux_aarch64.whl

# 다운로드가 끝나면 다운로드 폴더로 이동합니다.

cd Downloads

# 현재 버전의 opencv 를 찾아서 삭제해주세요
pip3 list | grep opencv
# list 에서 찾은 버전을 명시하여 opencv 를 삭제해주세요.
pip3 uninstall opencv==****
pip3 uninstall opencv-contrib

# 현재 버전의 numpy 를 찾아서 버전을 확인하세요.
pip3 list | grep numpy
# list 에서 찾은 버전을 명시하여 numpy 를 삭제해주세요.
pip3 uninstall numpy==***
# list 의 numpy 를 다시 찾아서 버전을 확인하세요.
pip3 list | grep numpy
# list 에서 다시 찾은 버전을 명시하여 numpy 를 다시 삭제해주세요.
pip3 uninstall numpy==***

# 리스트에서 numpy 가 보이지 않으면 이제 numpy를 설치해주세요.
pip3 install numpy==1.24.4
# 잘 설치되었는지 확인
pip3 list | grep numpy
# opencv 설치
sudo pip3 install opencv_python-4.10.0-py3-none-any.whl 
sudo pip3 install opencv_contrib_python-4.10.0+6a181ce-cp38-cp38-linux_aarch64.whl

#opencv 버전 확인 1.

$ python3
> import cv2
> print(cv2.__version__)

#opencv 버전 확인 2.
pip3 list | grep opencv

# libatlas 에러 나면 해결
sudo apt install libatlas-base-dev
sudo apt-get update

# csi 카메라 지원 여부 테스트

cd
git clone https://github.com/jetsonai/UltralyticsOrinNanoSetting
cd UltralyticsOrinNanoSetting
python3 basictest_yolov8_csi-cam.py 

# Torch 설치를 위해 기존 torch 확인 및 삭제

pip3 list | grep torch
pip3 uninstall torchvision==***
pip3 list | grep torch
pip3 uninstall torch==***
pip3 list | grep torch

# Torch 설치
cd ~/Downloads/
ls
sudo -H pip3 install -U torch-2.2.0-cp38-cp38-linux_aarch64.whl 

# openblas 에러 나면 해결
sudo apt-get install libopenblas-dev
sudo apt-get update

sudo -H pip3 install -U torchvision-0.17.2+c1d70fe-cp38-cp38-linux_aarch64.whl 

#torch 확인 1.
$ python3
> import torch
> import torchvision
> print(torch.is_cuda_avaiable())

# ultralytics 실행 확인

cd ~/UltralyticsOrinNanoSetting
python3 basictest_yolov8_csi-cam.py 

------------------------------------
# sensorfusion 종합 예제
pip3 uninstall scikit-learn==1.3.2
sudo -H pip3 install -U scikit-learn

export LD_PRELOAD=/usr/local/lib/python3.8/dist-packages/sklearn/__check_build/../../scikit_learn.libs/libgomp-d22c30c5.so.1.0.0

ros2 run ros_latesenfu latesenfu_node 




